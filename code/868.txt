import java.util.*;

class Solution {
    Map<String,Boolean>map=new HashMap<>();
    int k;
    public boolean solve(int[] A, int k) {
        this.k=k;
        return dfs(A,0,0,0);
    }

    public boolean dfs(int A[],int pre,int i,int sum){//0:nontake 1:take
        if(i>=A.length){
            if(sum==k)return true;
            return false;
        }
        if(sum>k)return false;

        String state=pre+","+i+","+sum;
        if(map.containsKey(state))return map.get(state);
        boolean res=false;

        if(pre==0){
            res=res|dfs(A,pre,i+1,sum);
            res=res|dfs(A,1,i+1,sum+A[i]);
        }
        else{
            res=res|dfs(A,0,i+1,sum);
        }
        map.put(state,res);
        return res;
        
    }
}
