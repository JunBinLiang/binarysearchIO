import java.util.*;

class Solution {
    public int solve(int[][] graph) {
        //do a topological sort
        int in[]=new int[graph.length];
        int res=0;
        Queue<int[]>q=new LinkedList<>();
        for(int A[]:graph){
            for(int i:A){
                in[i]++;
            }
        }

        for(int i=0;i<in.length;i++){
            if(in[i]==0){
                q.add(new int[]{i,0});
            }
        }

        while(q.size()!=0){
            int pair[]=q.poll();
            int v=pair[0],level=pair[1];
            res=Math.max(res,level);

            int A[]=graph[v];

            for(int next:A){
                in[next]--;
                if(in[next]==0){
                    q.add(new int[]{next,level+1});
                }
            }
        }

        return res;
    }
}
