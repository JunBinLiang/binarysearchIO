import java.util.*;

class Solution {
    public int solve(int[] A, int k) {
        return atmost(A,k)-atmost(A,k-1);
    }

    public int atmost(int A[],int k){
        Map<Integer,Integer>map=new HashMap<>();
        int l=0;int res=0;
        for(int i=0;i<A.length;i++){
            int cur=A[i];
            if(!map.containsKey(cur))map.put(cur,0);
            map.put(cur,map.get(cur)+1);

            while(map.size()>k){
                int f=A[l++];
                map.put(f,map.get(f)-1);
                if(map.get(f)==0)map.remove(f);
            }
            int size=i-l+1;
            res=res+size;
        }
        return res;
    }
}
