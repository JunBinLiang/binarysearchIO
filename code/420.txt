二分图


import java.util.*;

class Solution {
    List<Integer>adjecent[];
    int color[];
    public int solve(int[] source, int[] dest, int[] population) {
        int n=population.length;
        color=new int[n];
        adjecent=new ArrayList[n];
        for(int i=0;i<n;i++){
            adjecent[i]=new ArrayList<>();
        }

        for(int i=0;i<dest.length;i++){
            int v1=source[i];
            int v2=dest[i];
            adjecent[v1].add(v2);
            adjecent[v2].add(v1);
        }

        dfs(0,1);

        int a=0;
        int b=0;
        for(int i=0;i<n;i++){
            if(color[i]==1)a+=population[i];
            else b+=population[i];
        }
        return Math.max(a,b);
    }

    public void dfs(int root,int col){
        int nextcolor=1;
        if(col==1)nextcolor=2;
        color[root]=col;

        List<Integer>childs=adjecent[root];
        for(int next:childs){
            if(color[next]!=0)continue;
            dfs(next,nextcolor);
        }
    }
}
