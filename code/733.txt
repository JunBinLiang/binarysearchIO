import java.util.*;

class Solution {
    public int solve(int[] A, int size, int k) {
        int mn=Integer.MAX_VALUE;
        for(int i:A)mn=Math.min(mn,i);
        long res=-1;
        long l=mn,r=mn+k;
        while(l<=r){
            long mid=(l+r)/2;
            if(f(A,mid,size,k)){
                res=mid;
                l=mid+1;
            }
            else{
                r=mid-1;
            }
        }

        return (int)(res);
    }
    public boolean f(int A[],long mid,int size,int k){
        long cnt[]=new long[A.length+1];
        long sum=0;

        for(int i=0;i<A.length;i++){
            sum+=cnt[i];
            if(A[i]+sum>=mid)continue;
            long need=mid-sum-A[i];
            k-=need;
            sum+=need;
            cnt[Math.min(cnt.length-1,i+size)]-=need;
        }

        return k>=0;
    }
}
