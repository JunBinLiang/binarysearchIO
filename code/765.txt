import java.util.*;

class Solution {
    long dp[][];
    int n,k;
    int mod=1000000007;
    public int solve(int n, int k) {
        this.n=n;this.k=k;
        dp=new long[n+1][k+1];
        for(int i=0;i<dp.length;i++){
            Arrays.fill(dp[i],-1);
        }

        return (int)(dfs(0,0));
    }

    public long dfs(int i,int win){
        if(i>=n)return 1;
        if(dp[i][win]!=-1)return dp[i][win];
        long res=0;

        if(win==k){
            res+=dfs(i+1,0);
            res%=mod;
        }
        else{
            res+=dfs(i+1,win+1);
            res%=mod;
            res+=dfs(i+1,0);
            res%=mod;
        }
        dp[i][win]=res;
        return res;
    }
}
