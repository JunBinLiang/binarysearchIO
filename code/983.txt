import java.util.*;

class Solution {
    public int solve(int[][] mat) {
        int res=Integer.MIN_VALUE;
        int n=mat.length;
        int m=mat[0].length;
        int neg[][]=new int[n][m];
        int pos[][]=new int[n][m];
        int dp[][]=new int[n][m];

        for(int i=0;i<m;i++){
            dp[0][i]=mat[0][i];
            neg[0][i]=mat[0][i]+i;
            pos[0][i]=mat[0][i]-i;
            if(0==n-1)res=Math.max(res,dp[0][i]);
        }

        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                neg[i-1][j]=Math.max(neg[i-1][j-1],neg[i-1][j]);
            }
            
            for(int j=m-2;j>=0;j--){
                pos[i-1][j]=Math.max(pos[i-1][j+1],pos[i-1][j]);
            }

            for(int j=0;j<m;j++){
                if(j==0){
                    dp[i][j]=mat[i][j]+j+pos[i-1][j];
                }
                else if(j==m-1){
                    dp[i][j]=mat[i][j]-j+neg[i-1][j];
                }
                else{
                    dp[i][j]=Math.max(mat[i][j]+j+pos[i-1][j],mat[i][j]-j+neg[i-1][j]);
                }

                if(i==n-1)res=Math.max(res,dp[i][j]);
                neg[i][j]=dp[i][j]+j;
                pos[i][j]=dp[i][j]-j;
            }
        }

        /*for(int i=0;i<dp.length;i++){
            for(int j=0;j<dp[0].length;j++){
                System.out.print(dp[i][j]+" ");
            }System.out.println();
        }

        System.out.println();
        for(int i=0;i<dp.length;i++){
            for(int j=0;j<dp[0].length;j++){
                System.out.print(pos[i][j]+" ");
            }System.out.println();
        }*/


        return res;
    }
}
