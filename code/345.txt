import java.util.*;

class Solution {
    int dp[][];
    public int solve(int[] deadlines, int[] credits, int[] durations) {
        int n=deadlines.length;
        int A[][]=new int[n][3];
        dp=new int[400][400];

        for(int i=0;i<dp.length;i++){
            Arrays.fill(dp[i],-1);
        }

        for(int i=0;i<n;i++){
            A[i][0]=deadlines[i]+1;
            A[i][1]=credits[i];
            A[i][2]=durations[i];
        }

        Arrays.sort(A,(a,b)->{
            return a[0]-b[0];
        });

        return dfs(A,0,0);
    }

    public int dfs(int A[][],int index,int t){
        if(index>=A.length)return 0;
        if(dp[index][t]!=-1)return dp[index][t];
        int res=0;
        res=Math.max(res,dfs(A,index+1,t));//dont do the task

        int deadline=A[index][0];
        int credit=A[index][1];
        int duration=A[index][2];
        if(t+duration<=deadline){
            res=Math.max(res,credit+dfs(A,index+1,t+duration));
        }

        dp[index][t]=res;
        return res;
    }
}
